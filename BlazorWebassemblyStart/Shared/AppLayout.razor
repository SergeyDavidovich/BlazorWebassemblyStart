@inherits LayoutComponentBase

@using Syncfusion.Blazor.Navigations

<div class="wrapper">
    <header id="pageHeader">
        <button class="btn btn-outline-secondary oi oi-menu" style="height:fit-content; margin-left:1em" @onclick="@Toggle"></button>
    </header>
    <article id="mainArticle">
        @Body
    </article>
    @*<nav id="mainNav">*@
    <SfSidebar ID="mainNav" HtmlAttributes="@SideBarHtmlAttribute" @bind-IsOpen="@SidebarOpen" Target=".main-content" Width="20%" @ref="Sidebar"
               CloseOnDocumentClick="true" Animate="true" EnableGestures="true" ShowBackdrop="false" Type="SidebarType.Over">
        <ChildContent>
            <ul class="nav flex-column" style="margin-top:20px;">
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="" Match="NavLinkMatch.All" @onclick="@Toggle">
                        <span class="oi oi-home" aria-hidden="true"></span> Home
                    </NavLink>
                </li>
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="counter" @onclick="@Toggle">
                        <span class="oi oi-plus" aria-hidden="true"></span> Counter
                    </NavLink>
                </li>
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="fetchdata" @onclick="@Toggle">
                        <span class="oi oi-list-rich" aria-hidden="true"></span> Fetch data
                    </NavLink>
                </li>
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="mappage1" @onclick="@Toggle">
                        <span class="oi oi-map" aria-hidden="true"></span> Map page 1
                    </NavLink>
                </li>
            </ul>
        </ChildContent>
    </SfSidebar>
    @*</nav>*@
    <div id="siteAds">Ads</div>
    <footer id="pageFooter">Footer</footer>
</div>


@code {
    SfSidebar Sidebar;
    public Orientation Orientation = Orientation.Horizontal;
    public Orientation VerOrientation = Orientation.Vertical;
    public bool SidebarOpen { get; set; }

    Dictionary<string, object> SideBarHtmlAttribute = new Dictionary<string, object>()
{
            {"class", "sidebar-menu" }
        };

    protected override void OnInitialized()
    {
        SidebarOpen = false;
    }

    public void Toggle()
    {
        if (SidebarOpen)
        {
            SidebarOpen = false;
        }
        else
        {
            SidebarOpen = true;
        }
        //SidebarOpen = isSidebarOpen;
    }
}
